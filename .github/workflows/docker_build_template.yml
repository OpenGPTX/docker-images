name: Template for Notebook IDE images build

on:
  workflow_call:
    inputs:
      docker_img_names:
        description: "List of folders for dockerfiles"
        required: true
        type: string

      build_args:
        description: "Build args for docker images"
        default: ""
        required: false
        type: string

jobs:
  build-images:
    name: Build Docker Images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Workaround until matrix strategy is supported in reusable workflows
        # https://github.community/t/reusable-workflow-with-strategy-matrix/205676/2
        docker_img_names: ${{fromJson(inputs.docker_img_names)}}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Set up QEMU (for docker buildx)
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx (for multi-arch builds)
        uses: docker/setup-buildx-action@v2

      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/opengptx/notebook-servers/${{ matrix.docker_img_names }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ github.run_id }}
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=sha

      - name: Build and push
        id: build
        uses: docker/build-push-action@v3
        with:
          context: ./notebook-servers/${{ matrix.docker_img_names }}
          build-args: ${{ inputs.build_args }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Image digest
        run: echo ${{ steps.build.outputs.digest }}
